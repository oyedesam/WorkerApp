# Why we can cache installation of dependecies?

# Reducing the time it takes helps our workflow run faster

name: Cache  Worker Dependecies
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
        
        - name: Setup .NET Environment 
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: 8.0.x

        - name: Cache Dependencies
          uses: actions/cache@v3
          with:
            #Path we are trying to cache and also the cache must have a key which is used for retrieval
            path: ~/.nuget/packages
            # Produces a unique hashvalue based on the changes in the file passed to it, The hashvalue changes wnehever the file changes. In the case of .net, it is a csproj file
            key: deps-nuget-$${{ hashFiles('**/*.csproj')}}

        - name: Restore Application dependencies
          run: dotnet restore
        
        - name: Build Application Code
          run: dotnet build --no-restore

        - name : Publish Application code 
          run: dotnet publish -c Release -p PublishDir="workerapp-release"

        - name: Upload Artifact
          uses: actions/upload-artifact@v4
          with:
            name: workerapp-artifact
            path: ./workerapp-release


            
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Log
        run: echo "Deploying Worker Application to Production"
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: workerapp-artifact
      - name: output files
        run: ls -R